# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'fileutils'
require 'socket'

if File.directory?('.git')
    FileUtils.mkpath 'public'
end

pub_iface = a = Socket.getifaddrs.select{|x|
  x.addr.ipv4? and
  !x.addr.ipv4_loopback? and
  !x.addr.ipv4_multicast? and
  !x.name.start_with?('docker') and
  !x.name.start_with?('virbr')
}[0].name

def make_pub_ipaddr()
    pub_addr = Socket.ip_address_list.detect{|intf| intf.ipv4? and !intf.ipv4_loopback? and !intf.ipv4_multicast?}
    pub_addr_range = pub_addr.ip_address.split('.')[0,3].join('.')
    pub_ip_end = rand(50...100)
    pub_ip_addr = "#{pub_addr_range}.#{pub_ip_end}"

    return pub_ip_addr
end

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    cpus = `nproc`.to_i / 2
    mem = `grep 'MemTotal' /proc/meminfo | sed -e 's/MemTotal://' -e 's/ kB//'`.to_i / 1024 / 8

    config.vm.synced_folder "./public", "/vagrant", type: "nfs"
    config.vm.synced_folder "~/git", "/git", type: "nfs"

    config.vm.define :centos, primary: true do |centos|
        centos.vm.box = "centos/7"

        centos.vm.hostname = "vm-centos7"
        pub_addr = make_pub_ipaddr()
        centos.vm.network :public_network, ip: pub_addr, bridge: pub_iface, dev: pub_iface, mode: "bridge"
        centos.vm.network :private_network, ip: "192.168.200.10"

        centos.vm.provider :libvirt do |libvirt|
            libvirt.memory = mem
            libvirt.cpus = cpus
        end

        centos.vm.provider :virtualbox do |vb|
            vb.memory = mem
            vb.cpus = cpus
            vb.linked_clone = true
        end

        centos.vm.provision :ansible do |ansible|
            ansible.playbook = "playbooks/main.yml"
        end
    end
end
