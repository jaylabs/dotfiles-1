---
- name: download vagrant
  get_url:
    url: "{{ vagrant_download_url }}"
    dest: "{{ ansible_pkgs_dir }}/{{ vagrant_pkg }}"
    checksum: "sha256:{{ vagrant_checksum }}"
    timeout: 20
    validate_certs: no
  register: _download_vagrant
  until: _download_vagrant is succeeded
  tags: ["vagrant", "download-vagrant"]

- name: install vagrant
  package:
    name: "{{ ansible_pkgs_dir }}/{{ vagrant_pkg }}"
    state: present
  tags: ["vagrant", "install-vagrant"]

- name: install vagrant prereqs
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - libvirt
    - libxslt-devel
    - libxml2-devel
    - libvirt-devel
    - libguestfs-tools-c
    - ruby-devel
    - qemu
  tags: ["vagrant", "install-libvirt"]

- name: install vagrant plugins
  shell: "CONFIGURE_ARGS='with-libvirt-include=/usr/include/libvirt with-libvirt-lib=/usr/lib' vagrant plugin install {{ item }}"
  with_items:
    - sahara
    - vagrant-scp
    - vagrant-mutate
    - vagrant-libvirt
  tags: ["vagrant", "install-libvirt-plugin"]

- name: copy virt-rules
  copy:
    src: virt.rules
    dest: /etc/polkit-1/rules.d/10-virt.rules
    mode: 0644
  tags: ["vagrant", "copy-virt-rules"]

- name: allow user access to libvirt
  user:
    name: "{{ running_user_id }}"
    groups: libvirt
    append: True
  tags: ["vagrant", "allow-libvirt-user"]

- name: create default directory to vagrant
  file:
    path: /home/{{ lookup('env', 'USER') }}/vagrant/{{ item }}
    state: directory
  with_items:
    - public
    - playbooks
  tags: ["vagrant", "vagrant-create-dir"]

- name: copy vagrantfile
  copy:
    src: Vagrantfile
    dest: /home/{{ lookup('env', 'USER') }}/vagrant/Vagrantfile
    mode: 0644
  tags: ["vagrant", "copy-vagrantfile"]

- name: copy vagrantfile
  copy:
    src: main.yml
    dest: /home/{{ lookup('env', 'USER') }}/vagrant/playbooks/main.yml
    mode: 0644
  tags: ["vagrant", "copy-playbook-file"]

- name: install nfs tools
  package:
    name: nfs-utils
    state: present
  tags: ["vagrant", "nfs"]

- name: setup nfsd
  lineinfile:
    path: /etc/nfsd.conf
    line: 'udp=y'
    insertbefore: '^#[nfsd]'
    firstmatch: true
  tags: ["vagrant", "setup-nfs"]

- name: ensure systemd nfs-server is enabled on boot and start service
  systemd:
    daemon_reload: true
    name: nfs-server
    enabled: true
    state: started
  tags: ["vagrant", "nfs"]

- name: allow nfs services in firewall
  firewalld:
    permanent: yes
    immediate: yes
    state: enabled
    service: "{{ item }}"
  with_items:
    - nfs
    - rpc-bind
    - mountd
  tags: ["vagrant", "nfs"]

- name: open nfs ports in firewall
  firewalld:
    permanent: yes
    immediate: yes
    state: enabled
    port: "{{ item }}"
  with_items:
    - "1025-65535/tcp"
    - "1025-65535/udp"
  tags: ["vagrant", "nfs"]
