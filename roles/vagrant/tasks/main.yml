---
- name: download vagrant
  get_url:
    url: "{{ vagrant_download_url }}"
    dest: "{{ ansible_pkgs_dir }}/{{ vagrant_pkg }}"
    checksum: "sha256:{{ vagrant_checksum }}"
    timeout: 20
    validate_certs: no
  register: _download_vagrant
  until: _download_vagrant is succeeded

- name: install vagrant
  become: true
  package:
    name: "{{ ansible_pkgs_dir }}/{{ vagrant_pkg }}"
    state: present

- name: install vagrant prereqs
  become: true
  package:
    name: "{{ item }}"
    state: present
  loop:
    - libvirt
    - libxslt-devel
    - libxml2-devel
    - libvirt-devel
    - libguestfs-tools-c
    - ruby-devel
    - qemu

- name: install vagrant plugins
  shell: "CONFIGURE_ARGS='with-libvirt-include=/usr/include/libvirt with-libvirt-lib=/usr/lib' vagrant plugin install {{ item }}"
  loop:
    - sahara
    - vagrant-scp
    - vagrant-mutate
    - vagrant-libvirt

- name: copy virt-rules
  become: true
  copy:
    src: virt.rules
    dest: /etc/polkit-1/rules.d/10-virt.rules
    mode: 0644

- name: allow user access to libvirt
  become: true
  user:
    name: "{{ running_user_id }}"
    groups: libvirt
    append: True

- name: create default directory to vagrant
  file:
    path: /home/{{ lookup('env', 'USER') }}/vagrant/{{ item }}
    state: directory
  loop:
    - public
    - playbooks

- name: copy files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    force: true
  loop:
    - src: Vagrantfile
      dest: /home/{{ lookup('env', 'USER') }}/vagrant/Vagrantfile
    - src: main.yml
      dest: /home/{{ lookup('env', 'USER') }}/vagrant/playbooks/main.yml

- name: install nfs tools
  become: true
  package:
    name: nfs-utils
    state: present

- name: setup nfsd
  become: true
  lineinfile:
    path: /etc/nfsd.conf
    line: 'udp=y'
    insertbefore: '^#[nfsd]'
    firstmatch: true

- name: ensure systemd nfs-server is enabled on boot and start service
  become: true
  systemd:
    daemon_reload: true
    name: nfs-server
    enabled: true
    state: started

- name: allow nfs services in firewall
  become: true
  firewalld:
    permanent: yes
    immediate: yes
    state: enabled
    service: "{{ item }}"
  loop:
    - nfs
    - rpc-bind
    - mountd

- name: open nfs ports in firewall
  become: true
  firewalld:
    permanent: yes
    immediate: yes
    state: enabled
    port: "{{ item }}"
  loop:
    - "1025-65535/tcp"
    - "1025-65535/udp"
