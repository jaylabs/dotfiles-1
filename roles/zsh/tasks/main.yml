---
- name: install zsh
  become: true
  package:
    name: zsh
    state: present
  register: install-zsh

- name: configure zsh to major shell
  command: "usermod --shell /usr/bin/zsh $USER"

- name: Download antibody
  action: get_url
  args:
    url: "{{ antibody_download_url }}"
    dest: "{{ ansible_pkgs_dir }}/antibody-{{ antibody_version }}.tar.gz"
    checksum: "sha256:{{ antibody_checksum }}"
  register: _download_antibody
  until: _download_antibody is succeeded

- name: unarchive antibody package
  unarchive:
    remote_src: true
    src: "{{ ansible_pkgs_dir }}/antibody-{{ antibody_version }}.tar.gz"
    dest: "{{ running_user_dir }}/bin"
    creates: "{{ running_user_dir }}/bin/antibody"
    extra_opts: antibody

- name: set up antibody executable permissions
  file:
    path: "{{ running_user_dir }}/bin/antibody"
    mode: 0755

- name: clean old zsh files
  file:
    state: absent
    path: "{{ running_user_dir }}/.{{ item }}"
  loop:
    - zlogin
    - zlogout
    - zpreztorc
    - zprofile
    - zshenv
    - zprezto

- name: create zsh config dirs
  file:
    state: directory
    path: "{{ running_user_dir }}/.{{ item }}"
  loop:
    - zsh
    - zkbd

- name: install main zsh config file
  copy:
    src: zshrc
    dest: "{{ running_user_dir }}/.zshrc"
    mode: 0644

- name: install zsh config files
  copy:
    src: "{{ item }}"
    dest: "{{ running_user_dir }}/.zsh/{{ item }}"
  loop:
    - custom.zsh
    - completion.zsh
    - config.zsh
    - docker.zsh
    - git.zsh
    - golang.zsh
    - less.zsh
    - node.zsh
    - path.zsh
    - plugins
    - python.zsh
    - rpm.zsh
    - ssh.zsh
    - gcp.zsh
    - k8s.zsh
    - ansible.zsh
    - kubectl.zsh
    - vagrant.zsh

- name: install zkbd config files
  copy:
    src: "{{ item.src }}"
    dest: "{{ running_user_dir }}/.zkbd/{{ item.dst }}"
    mode: 0644
  loop:
    - src: zkbd.screen-256color
      dst: screen-256color-:0
    - src: zkbd.xterm-256color
      dst: xterm-256color-:0
